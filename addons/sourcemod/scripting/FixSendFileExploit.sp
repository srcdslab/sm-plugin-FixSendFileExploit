#include <sourcemod>
#include <sdktools>

public Plugin:myinfo =
{
	name = "SendFile Exploit Fix",
	author = "backwards",
	description = "Prevents Clients From Exploiting The Un-Patched SRCDS SendFile Command.",
	version = SOURCEMOD_VERSION,
	url = "http://www.steamcommunity.com/id/mypassword"
}

#define MAX_FILES_ALLOWED_WHILE_ACTIVE_PER_MAP 256

bool InLevel[MAXPLAYERS+1] = {false, ...};
int RequestCount[MAXPLAYERS+1] = {0, ...};

bool bRepeat = true;

public OnPluginStart()
{
	CreateTimer(5.0, DecrementThread, _, TIMER_REPEAT);
}

public OnPluginEnd()
{
	bRepeat = false;
}

public OnMapStart()
{
	for (int client = 1; client <= MaxClients; client++)
		if(IsValidClient(client))
			if(IsClientInGame(client))
			{
				InLevel[client] = true;
				RequestCount[client] = 0;
			}
}

public OnMapEnd()
{
	for (int client = 1; client <= MaxClients; client++)
	{
		InLevel[client] = false;
		RequestCount[client] = 0;
	}
}

public OnClientPutInServer(client)
{
	InLevel[client] = true;
	RequestCount[client] = 0;
}

public OnClientDisconnect(client)
{
	RequestCount[client] = 0;
}

public Action DecrementThread(Handle timer, any unused)
{
	if (!bRepeat)
		return Plugin_Stop;

	for (int client = 0; client <= MaxClients; client++)
	{
		RequestCount[client] -= 32;
		if(RequestCount[client] < 0)
			RequestCount[client] = 0;
	}
	
	return Plugin_Continue;
}

public Action OnFileSend(int client, const char[] sFile)
{
	if (InLevel[client])
	{
		RequestCount[client]++;
		if (RequestCount[client] > MAX_FILES_ALLOWED_WHILE_ACTIVE_PER_MAP)
		{
			if (!IsClientInKickQueue(client))
				KickClient(client, "ServerCrashExploitAttempt.");
				
			return Plugin_Stop;
		}
	}
	
	return Plugin_Continue;
}

bool IsValidClient(int client, bool nobots = true)
{
	if (client <= 0 || client > MaxClients || !IsClientConnected(client) || (nobots && IsFakeClient(client)))
	{
		return false;
	}
	return IsClientInGame(client);
}